{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Development Environment",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters."
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": { "AMI": "ami-032930428bf1abbff" }
        }
    },
    "Resources": {
        "VPCNotejam": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "175.31.0.0/16",
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [{ "Key": "Name", "Value": "Notejam-App" }] 
            }
        },
        "SubnetAZa": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "175.31.0.0/20",
                "AvailabilityZone": "us-east-1a",
                "VpcId": {
                    "Ref": "VPCNotejam"
                },
                "Tags": [{ "Key": "Name", "Value": "SubnetAZa" }] 
            }
        },
        "SubnetAZb": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "175.31.16.0/20",
                "AvailabilityZone": "us-east-1b",
                "VpcId": {
                    "Ref": "VPCNotejam"
                },
                "Tags": [{ "Key": "Name", "Value": "SubnetAZb" }] 
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "Ec2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {"Ref": "KeyName" },
                "InstanceType": "t2.micro",
                "IamInstanceProfile": "CodeDeploy",
                "Monitoring": "false",
                "ImageId": { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "AMI" ] },
                "UserData": { "Fn::Base64": { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n",
                    "sudo yum update -y\n",
                    "curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash - \n",
                    "sudo yum install nodejs git -y \n",
                    "sudo npm install -g express express-generator \n",
                    "wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install \n",
                    "chmod +x ./install\n",
                    "sudo ./install auto \n",
                    "sudo service codedeploy-agent status\n",
                    "mkdir app"
                ]]}},
                "Tags": [{ "Key": "Name", "Value": "notejam-instance" }, { "Key": "Environment", "Value": "Development" }],
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": { "Ref": "SubnetAZa" },
                        "GroupSet": [{ "Ref": "SecurityGroupNotejamApp" }],
                        "AssociatePublicIpAddress": "true"
                    }
                ]
            }
        },
        "SecurityGroupNotejamApp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SecurityGroup Notejam App",
                "VpcId": { "Ref": "VPCNotejam" },
                "Tags": [{ "Key": "Name", "Value": "SG_NotejamApp" }]
            }
        },
        "IgwAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCNotejam"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "RoutingTable":
        {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPCNotejam"
                },
                "Tags": [{ "Key": "Name", "Value": "RT_Public" }]
            }
        },
        "PublicRoute":
        {
          "Type": "AWS::EC2::Route",
          "Properties":
            {
              "DestinationCidrBlock": "0.0.0.0/0",
              "RouteTableId": { "Ref": "RoutingTable" },
              "GatewayId": { "Ref": "InternetGateway" }
            },
          "DependsOn": "IgwAttach"
        },
        "PublicSubnetAssoc":
        {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties":
            {
                "RouteTableId": { "Ref": "RoutingTable" },
                "SubnetId": { "Ref": "SubnetAZa"}
            }
        },
        "INgressSSH": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroupNotejamApp"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "INgressWeb": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroupNotejamApp"
                },
                "IpProtocol": "tcp",
                "FromPort": "3000",
                "ToPort": "3000",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "Egress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroupNotejamApp"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        }
    },
    "Outputs": {
        "VPCId": {
            "Description": "VPCId of the newly created VPC",
            "Value": { "Ref": "VPCNotejam" }
        },
        "InstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": { "Ref": "Ec2Instance" }
        },
        "AZ": {
            "Description": "Availability Zone of the newly created EC2 instance",
            "Value": { "Fn::GetAtt": [ "Ec2Instance", "AvailabilityZone" ] }
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": { "Fn::GetAtt": [ "Ec2Instance", "PublicIp" ] }
        },
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": { "Fn::GetAtt": [ "Ec2Instance", "PublicDnsName" ] }
        }
    }
}